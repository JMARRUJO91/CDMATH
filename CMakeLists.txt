CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

# nom du projet
PROJECT(CDMAT)
# version minimum de cmake

SET(BASE_DIR ${CDMAT_SOURCE_DIR}/base)
SET(MESH_DIR ${CDMAT_SOURCE_DIR}/mesh)
SET(LINEARSOLVER_DIR ${CDMAT_SOURCE_DIR}/linearsolver)
SET(CDMATH_SWIG_DIR ${CDMAT_SOURCE_DIR}/swig)
SET(PRE_REQUIS_DIR ${CDMAT_SOURCE_DIR}/pre_requis)
SET(INTERP_KERNEL_DIR ${PRE_REQUIS_DIR}/INTERP_KERNEL)
SET(MED_COUPLING_DIR ${PRE_REQUIS_DIR}/MEDCoupling)
SET(MED_COUPLING_SWIG_DIR ${PRE_REQUIS_DIR}/MEDCoupling_Swig)
SET(MED_LOADER_DIR ${PRE_REQUIS_DIR}/MEDLoader)
SET(MED3_DIR ${PRE_REQUIS_DIR}/MEDFile)

SET(TESTS_DIR ${CDMAT_SOURCE_DIR}/tests)
LIST (APPEND CMAKE_MODULE_PATH "${CDMAT_SOURCE_DIR}/cmake_files")

SET (MACHINE PCLINUX)
SET (MED3_DEFINITIONS "-D${MACHINE}")
SET (MED_INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/pre_requis/MEDFile)
SET (MED3_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/pre_requis/MEDFile/include ${CMAKE_CURRENT_BINARY_DIR}/pre_requis/MEDFile/include)
SET (MED3_LIB ${CMAKE_CURRENT_BINARY_DIR}/pre_requis/MEDFile/src/libmedC.so)
SET (MED3_LIBS ${MED3_LIB})

FIND_PACKAGE(HDF5 REQUIRED)
FIND_PACKAGE(PETSc REQUIRED)

IF (CMAKE_CDMATH_SWIG)
   FIND_PACKAGE(PYTHON REQUIRED)
   FIND_PACKAGE(SWIG REQUIRED)
   ADD_SUBDIRECTORY(${CDMATH_SWIG_DIR})
ENDIF (CMAKE_CDMATH_SWIG)

ADD_SUBDIRECTORY(${PRE_REQUIS_DIR})
ADD_SUBDIRECTORY(${BASE_DIR})
ADD_SUBDIRECTORY(${MESH_DIR})

ADD_SUBDIRECTORY(${LINEARSOLVER_DIR})

IF(CMAKE_CDMATH_DOCUMENTATION)
  FIND_PACKAGE(Doxygen)
  IF (NOT DOXYGEN_FOUND)
    MESSAGE(FATAL_ERROR "Doxygen is needed to build the documentation. Please install it correctly")
  ENDIF()

  CONFIGURE_FILE(Doxyfile.in ${PROJECT_BINARY_DIR}/Doxyfile  @ONLY IMMEDIATE)

  ADD_CUSTOM_TARGET (doc ALL COMMAND ${DOXYGEN_EXECUTABLE} ${PROJECT_BINARY_DIR}/Doxyfile
  							  SOURCES ${PROJECT_BINARY_DIR}/Doxyfile)

  INSTALL( DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/doc DESTINATION ${CMAKE_INSTALL_PREFIX} )
ENDIF()
 

IF (CMAKE_CDMATH_TESTS)
    SET(CMAKE_EXE_LINKER_FLAGS "-pg -fprofile-arcs -ftest-coverage -lgcov")
    enable_testing()
    FIND_PACKAGE(CPPUNIT REQUIRED)
    ADD_SUBDIRECTORY(${TESTS_DIR})
ENDIF (CMAKE_CDMATH_TESTS)
