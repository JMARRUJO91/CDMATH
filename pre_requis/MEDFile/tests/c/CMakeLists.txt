INCLUDE_DIRECTORIES(
  ${HDF5_INCLUDE_DIRS}
  ${CMAKE_CURRENT_BINARY_DIR}/../../include
  ${CMAKE_CURRENT_SOURCE_DIR}/../../include
)

SET(testc_SOURCES test1.c test2.c test3.c test4.c test5.c test6.c test7.c test8.c test9.c test10.c test11.c test11b.c test12.c test13.c test14.c test15.c test16.c test17.c test18.c test20.c test21.c test22.c test23.c test24.c test25.c test26.c test27.c test28.c test29.c test30.c test31.c test32.c test33.c)

SET(testc_NOT_AUTO_LAUNCH test13 test15 test30 test31 test32 test33)

FOREACH(testc_SOURCE ${testc_SOURCES})
  GET_FILENAME_COMPONENT(testc_BASE ${testc_SOURCE} NAME_WE)
  LIST(FIND testc_NOT_AUTO_LAUNCH ${testc_BASE} IS_STDALONE_TEST)
  #
  SET(testc_SHARED_BIN "${testc_BASE}c")
  ADD_EXECUTABLE(${testc_SHARED_BIN} ${testc_SOURCE})
  TARGET_LINK_LIBRARIES(${testc_SHARED_BIN} medC)
  SET(tmp_COMPILE_CFLAGS ${PLATFORM_CFLAGS})
  MED_SET_COMPILE_FLAGS(${testc_SHARED_BIN} "${tmp_COMPILE_CFLAGS}")
  SET_TARGET_PROPERTIES(${testc_SHARED_BIN} PROPERTIES OUTPUT_NAME ${testc_BASE})
  GET_TARGET_PROPERTY(TMP ${testc_SHARED_BIN} OUTPUT_NAME)
#  INSTALL(TARGETS ${testc_SHARED_BIN} DESTINATION bin/testc)
  IF(${IS_STDALONE_TEST} EQUAL -1)
    ADD_TEST("Test${testc_SHARED_BIN}" ${TMP})
  ENDIF(${IS_STDALONE_TEST} EQUAL -1)
  #
  SET(testc_STATIC_BIN "${testc_BASE}c_static")
  ADD_EXECUTABLE(${testc_STATIC_BIN} ${testc_SOURCE})
  TARGET_LINK_LIBRARIES(${testc_STATIC_BIN} medC_static)
  SET(tmp_COMPILE_CFLAGS ${PLATFORM_CFLAGS} -DMED3_USESTATIC)
  MED_SET_COMPILE_FLAGS(${testc_STATIC_BIN} "${tmp_COMPILE_CFLAGS}")
  SET_TARGET_PROPERTIES(${testc_STATIC_BIN} PROPERTIES OUTPUT_NAME "${testc_BASE}_static")
  GET_TARGET_PROPERTY(TMP ${testc_STATIC_BIN} OUTPUT_NAME)
#  INSTALL(TARGETS ${testc_STATIC_BIN} DESTINATION bin/testc)
  #
  IF(${IS_STDALONE_TEST} EQUAL -1)
    ADD_TEST("Test${testc_STATIC_BIN}" ${TMP})
  ENDIF(${IS_STDALONE_TEST} EQUAL -1)
ENDFOREACH(testc_SOURCE ${testsc_BINARIES})
